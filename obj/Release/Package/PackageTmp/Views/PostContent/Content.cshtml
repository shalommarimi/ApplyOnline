@model ApplyOnline.Models.NewContent

@{
    ViewBag.Title = "News";

    var Posttypes = new SelectList(new string[] { "DDNA News", "DDNA Announcement", "DDNA Learnership Programme", "DDNA Internship Programme" });
}

<!Doctype html>
<html>
<head>
    <title></title>
</head>
<body  id="postnew">

    <div class="container">
        <h3>Post New Content</h3>
        <div class="panel panel-default">
            <div class="panel-heading">Administrator:</div>
            <div class="panel-body">

                @using (Html.BeginForm("PostNews", "PostContent"))
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">


                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.PostType, Posttypes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PostType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PostSubject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostSubject, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostBody, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="mailbody">
                                    @Html.TextAreaFor(model => model.PostBody, new { @class = "form-control" })
                                </div>
                               
                                @Html.ValidationMessageFor(model => model.PostBody, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostEntryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PostEntryDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @placeholder = System.DateTime.Now } })
                                @Html.ValidationMessageFor(model => model.PostEntryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Publish" class="btn" />
                                <input type="reset" value="Reset" class="btn" />
                            </div>
                        </div>
                    </div>


                }

            </div>
        </div>
    </div>

</body>


</html>

